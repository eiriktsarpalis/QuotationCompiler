<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>
  <PropertyGroup>
    <!-- NuGet metadata -->
    <id>QuotationCompiler</id>
    <Authors>Eirik Tsarpalis</Authors>
    <Copyright>Copyright 2018</Copyright>
    <Description>A small library for compiling F# code quotations using FSharp.Compiler.Service as a backend. Its primary functionality is transforming quotation trees to untyped ASTs used by the F# compiler. Since code is generated using the F# compiler proper, the end result is fully efficient and optimized.</Description>
    <PackageProjectUrl>https://www.github.com/eiriktsarpalis/QuotationCompiler</PackageProjectUrl>
    <RepositoryUrl>https://www.github.com/eiriktsarpalis/QuotationCompiler</RepositoryUrl>
    <PackageLicenseUrl>https://www.github.com/eiriktsarpalis/QuotationCompiler/blob/master/License.md</PackageLicenseUrl>
  </PropertyGroup>
  <PropertyGroup>
    <WarningLevel>5</WarningLevel>
    <NoWarn>52,1178</NoWarn>
    <OtherFlags>--warnon:1182</OtherFlags>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="Types.fs" />
    <Compile Include="Utils.fs" />
    <Compile Include="Pickle.fs" />
    <Compile Include="ExprEqualityComparer.fs" />
    <Compile Include="Dependencies.fs" />
    <Compile Include="Compiler.fs" />
    <Compile Include="QuotationCompiler.fs" />
    <None Include="Script.fsx" />
    <None Include="paket.references" />
  </ItemGroup>
  <Import Project="..\..\.paket\Paket.Restore.targets" />
</Project>